version: "3.6"

networks:
  sn_net:
    driver: bridge


services:
  goservice:
    build: "."
    restart: on-failure
    ports:
      - '3000:3000'
    depends_on:
      - "db"
      - "liquibase"
    networks:
      - sn_net

  nginx:
    build: "./nginx"
    restart: on-failure
    ports:
      - "80:80"
    depends_on:
      - "goservice"
    networks:
      - sn_net

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data
    networks:
      - sn_net


  liquibase:
    build:
      context: ./db-migrations/
    command: update
    restart: on-failure
    container_name: liquibase
    environment:
      - LIQUIBASE_CHANGELOG=changelog.xml
      - LIQUIBASE_URL=jdbc:mysql://db:3306
      - LIQUIBASE_USERNAME=user
      - LIQUIBASE_PASSWORD=password
      - LIQUIBASE_OPTS=--defaultSchemaName=db --liquibaseSchemaName=db
    depends_on:
      - db
    networks:
      - sn_net

  redis:
    image: redis:alpine
    container_name: link_provider_redis
    restart: on-failure
    command: redis-server --maxmemory 15gb --maxmemory-policy allkeys-lru --maxclients 200000
    ports:
      - 6379:6379
    networks:
      - sn_net

  rabbitmq:
    build:
      context: rabbit
      dockerfile: Dockerfile
    container_name: rabbitmq
    restart: on-failure
    environment:
      RABBITMQ_ERLANG_COOKIE: '!SecretCookie!'
    networks:
      - sn_net
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbit/rabbitmq-data:/var/lib/rabbitmq
      - ./rabbit/rabbitmq-logs:/var/log/rabbitmq